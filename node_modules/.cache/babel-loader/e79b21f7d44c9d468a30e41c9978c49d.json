{"ast":null,"code":"import service from \"..\"; // 获取歌单详情页的数据\n\nexport function getMusicItemList(data) {\n  return service({\n    method: \"GET\",\n    url: `/playlist/detail?id=${data}`,\n    data: {}\n  });\n} // 获取歌单所有歌曲\n\nexport function getItemList(data) {\n  return service({\n    method: \"GET\",\n    url: `/playlist/track/all?id=${data}&limit=10&offset=0`,\n    data: {}\n  });\n} // 获取歌曲的歌词\n\nexport function getMusicLyric(data) {\n  return service({\n    method: \"GET\",\n    url: `/lyric?id=${data}`,\n    data: {}\n  });\n}\nexport function move(ele, type, target) {\n  // 获取到元素当前位置的样式值\n  let current = parseInt(window.getComputedStyle(ele)[type]);\n  let distance = current; // 要让前元素显示的left样式值\n\n  let timer = setInterval(() => {\n    // 使用箭头函数则函数内的this指向定义箭头函数的作用域中的,也就会指向事件源\n    distance += 5; // 判断是否到达目标位置\n\n    if (distance >= target) {\n      // 关闭定时器\n      clearInterval(timer);\n    } else {\n      ele.style[type] = distance + 'px';\n    }\n  }, 20);\n}","map":{"version":3,"names":["service","getMusicItemList","data","method","url","getItemList","getMusicLyric","move","ele","type","target","current","parseInt","window","getComputedStyle","distance","timer","setInterval","clearInterval","style"],"sources":["E:/Project_2022/web/Vue/练习/NetMusic/NetMusic/netmusic/src/request/api/item.js"],"sourcesContent":["import service from \"..\"\r\n\r\n// 获取歌单详情页的数据\r\nexport function getMusicItemList(data) {\r\n    return service({\r\n        method: \"GET\",\r\n        url: `/playlist/detail?id=${data}`,\r\n        data: {\r\n\r\n        }\r\n    })\r\n}\r\n// 获取歌单所有歌曲\r\nexport function getItemList(data) {\r\n    return service({\r\n        method: \"GET\",\r\n        url: `/playlist/track/all?id=${data}&limit=10&offset=0`,\r\n        data: {\r\n\r\n        }\r\n    })\r\n}\r\n// 获取歌曲的歌词\r\nexport function getMusicLyric(data) {\r\n    return service({\r\n        method: \"GET\",\r\n        url: `/lyric?id=${data}`,\r\n        data: {\r\n\r\n        }\r\n    })\r\n}\r\n\r\nexport function move(ele,type,target) {\r\n    // 获取到元素当前位置的样式值\r\n    let current = parseInt(window.getComputedStyle(ele)[type]);\r\n    let distance = current;// 要让前元素显示的left样式值\r\n    let timer = setInterval(()=>{ \r\n      // 使用箭头函数则函数内的this指向定义箭头函数的作用域中的,也就会指向事件源\r\n      distance += 5;\r\n      // 判断是否到达目标位置\r\n      if(distance>=target){\r\n        // 关闭定时器\r\n        clearInterval(timer);\r\n      }else{\r\n        ele.style[type] = distance + 'px';\r\n      }\r\n    },20)\r\n  }\r\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,IAApB,C,CAEA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EACnC,OAAOF,OAAO,CAAC;IACXG,MAAM,EAAE,KADG;IAEXC,GAAG,EAAG,uBAAsBF,IAAK,EAFtB;IAGXA,IAAI,EAAE;EAHK,CAAD,CAAd;AAOH,C,CACD;;AACA,OAAO,SAASG,WAAT,CAAqBH,IAArB,EAA2B;EAC9B,OAAOF,OAAO,CAAC;IACXG,MAAM,EAAE,KADG;IAEXC,GAAG,EAAG,0BAAyBF,IAAK,oBAFzB;IAGXA,IAAI,EAAE;EAHK,CAAD,CAAd;AAOH,C,CACD;;AACA,OAAO,SAASI,aAAT,CAAuBJ,IAAvB,EAA6B;EAChC,OAAOF,OAAO,CAAC;IACXG,MAAM,EAAE,KADG;IAEXC,GAAG,EAAG,aAAYF,IAAK,EAFZ;IAGXA,IAAI,EAAE;EAHK,CAAD,CAAd;AAOH;AAED,OAAO,SAASK,IAAT,CAAcC,GAAd,EAAkBC,IAAlB,EAAuBC,MAAvB,EAA+B;EAClC;EACA,IAAIC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBN,GAAxB,EAA6BC,IAA7B,CAAD,CAAtB;EACA,IAAIM,QAAQ,GAAGJ,OAAf,CAHkC,CAGX;;EACvB,IAAIK,KAAK,GAAGC,WAAW,CAAC,MAAI;IAC1B;IACAF,QAAQ,IAAI,CAAZ,CAF0B,CAG1B;;IACA,IAAGA,QAAQ,IAAEL,MAAb,EAAoB;MAClB;MACAQ,aAAa,CAACF,KAAD,CAAb;IACD,CAHD,MAGK;MACHR,GAAG,CAACW,KAAJ,CAAUV,IAAV,IAAkBM,QAAQ,GAAG,IAA7B;IACD;EACF,CAVsB,EAUrB,EAVqB,CAAvB;AAWD"},"metadata":{},"sourceType":"module"}