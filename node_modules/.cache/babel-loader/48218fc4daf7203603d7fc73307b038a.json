{"ast":null,"code":"import { mapMutations, mapState } from \"vuex\";\nimport MusicDetail from \"./MusicDetail.vue\";\nexport default {\n  data() {\n    return {\n      interVal: 0\n    };\n  },\n\n  computed: { ...mapState([\"playList\", \"playListIndex\", \"isBtnShow\", \"detailShow\"])\n  },\n\n  mounted() {// console.log(this.$refs);\n    // this.$store.dispatch(\"getLyric\", this.playList[this.playListIndex].id);\n    // this.updateTime();\n  },\n\n  updated() {\n    this.$store.dispatch(\"getLyric\", this.playList[this.playListIndex].id);\n  },\n\n  methods: {\n    play: function () {\n      // 判断音乐是否播放\n      if (this.$refs.audio.paused) {\n        this.$refs.audio.play();\n        this.updateIsbtnShow(false); // this.updateTime(); // 播放就调用函数 进行传值\n\n        clearInterval(this.interVal);\n      } else {\n        this.$refs.audio.pause();\n        this.updateIsbtnShow(true); // clearInterval(this.interVal); // 暂停清除定时器\n\n        this.updateTime();\n      }\n    },\n    updateTime: function () {\n      this.interVal = setInterval(() => {\n        this.updateCurrentTime(this.$refs.audio.currentTime);\n      }, 1000);\n    },\n    ...mapMutations([\"updateIsbtnShow\", \"updateDetailShow\", \"updateCurrentTime\"])\n  },\n  watch: {\n    playListIndex: function () {\n      // 监听如果下标发生改变，就自动播放音乐\n      this.$refs.audio.autoplay = true;\n\n      if (this.$refs.audio.paused) {\n        // 如果是暂停状态，就改变图标\n        this.updateIsbtnShow(false);\n      }\n    },\n    playList: function () {\n      if (this.isBtnShow) {\n        // 如果 isBtnShow 为 true（暂停图标），就自动播放\n        this.$refs.audio.autoplay = true;\n        this.updateIsbtnShow(false);\n      }\n    }\n  },\n  components: {\n    MusicDetail\n  }\n};","map":{"version":3,"mappings":"AAuCA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CALY;;EAMbC,QAAQ,EAAE,EACR,GAAGJ,QAAQ,CAAC,CAAC,UAAD,EAAa,eAAb,EAA8B,WAA9B,EAA2C,YAA3C,CAAD;EADH,CANG;;EASbK,OAAO,GAAG,CACR;IACA;IACA;EACD,CAbY;;EAcbC,OAAO,GAAG;IACR,KAAKC,MAAL,CAAYC,QAAZ,CAAqB,UAArB,EAAiC,KAAKC,QAAL,CAAc,KAAKC,aAAnB,EAAkCC,EAAnE;EACD,CAhBY;;EAiBbC,OAAO,EAAE;IACPC,IAAI,EAAE,YAAY;MAChB;MACA,IAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAArB,EAA6B;QAC3B,KAAKF,KAAL,CAAWC,KAAX,CAAiBF,IAAjB;QACA,KAAKI,eAAL,CAAqB,KAArB,EAF2B,CAG3B;;QACAC,aAAa,CAAC,KAAKf,QAAN,CAAb;MACF,CALA,MAKO;QACL,KAAKW,KAAL,CAAWC,KAAX,CAAiBI,KAAjB;QACA,KAAKF,eAAL,CAAqB,IAArB,EAFK,CAGL;;QACA,KAAKG,UAAL;MACF;IACD,CAdM;IAePA,UAAU,EAAE,YAAY;MACtB,KAAKjB,QAAL,GAAgBkB,WAAW,CAAC,MAAM;QAChC,KAAKC,iBAAL,CAAuB,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,WAAxC;MACD,CAF0B,EAExB,IAFwB,CAA3B;IAGD,CAnBM;IAoBP,GAAGxB,YAAY,CAAC,CACd,iBADc,EAEd,kBAFc,EAGd,mBAHc,CAAD;EApBR,CAjBI;EA2CbyB,KAAK,EAAE;IACLd,aAAa,EAAE,YAAY;MACzB;MACA,KAAKI,KAAL,CAAWC,KAAX,CAAiBU,QAAjB,GAA4B,IAA5B;;MACA,IAAI,KAAKX,KAAL,CAAWC,KAAX,CAAiBC,MAArB,EAA6B;QAC3B;QACA,KAAKC,eAAL,CAAqB,KAArB;MACF;IACD,CARI;IASLR,QAAQ,EAAE,YAAY;MACpB,IAAI,KAAKiB,SAAT,EAAoB;QAClB;QACA,KAAKZ,KAAL,CAAWC,KAAX,CAAiBU,QAAjB,GAA4B,IAA5B;QACA,KAAKR,eAAL,CAAqB,KAArB;MACF;IACD;EAfI,CA3CM;EA4DbU,UAAU,EAAE;IAAE1B;EAAF;AA5DC,CAAf","names":["mapMutations","mapState","MusicDetail","data","interVal","computed","mounted","updated","$store","dispatch","playList","playListIndex","id","methods","play","$refs","audio","paused","updateIsbtnShow","clearInterval","pause","updateTime","setInterval","updateCurrentTime","currentTime","watch","autoplay","isBtnShow","components"],"sourceRoot":"","sources":["E:\\Project_2022\\web\\Vue\\练习\\NetMusic\\NetMusic\\netmusic\\src\\components\\item\\FooterMusic.vue"],"sourcesContent":["<template>\r\n  <div class=\"footerMusic\">\r\n    <div class=\"footerLeft\" @click=\"updateDetailShow\">\r\n      <img :src=\"playList[playListIndex].al.picUrl\" alt=\"\" />\r\n      <div>\r\n        <p>{{ playList[playListIndex].name }}</p>\r\n        <span>横滑可以切换上下首哦</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"footerRight\">\r\n      <svg class=\"icon\" aria-hidden=\"true\" v-if=\"isBtnShow\">\r\n        <use xlink:href=\"#icon-bofanganniu\" @click=\"play\"></use>\r\n      </svg>\r\n      <svg class=\"icon\" aria-hidden=\"true\" v-else>\r\n        <use xlink:href=\"#icon-zanting\" @click=\"play\"></use>\r\n      </svg>\r\n      <svg class=\"icon\" aria-hidden=\"true\">\r\n        <use xlink:href=\"#icon-24gf-playlistMusic\"></use>\r\n      </svg>\r\n    </div>\r\n    <audio\r\n      ref=\"audio\"\r\n      :src=\"`https://music.163.com/song/media/outer/url?id=${playList[playListIndex].id}.mp3`\"\r\n    ></audio>\r\n    <van-popup\r\n      :show=\"detailShow\"\r\n      position=\"bottom\"\r\n      :style=\"{ height: '100%', width: '100%' }\"\r\n    >\r\n      <MusicDetail\r\n        :musicList=\"playList[playListIndex]\"\r\n        :play=\"play\"\r\n        :isBtnShow=\"isBtnShow\"\r\n      />\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from \"vuex\";\r\nimport MusicDetail from \"./MusicDetail.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      interVal: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"playList\", \"playListIndex\", \"isBtnShow\", \"detailShow\"]),\r\n  },\r\n  mounted() {\r\n    // console.log(this.$refs);\r\n    // this.$store.dispatch(\"getLyric\", this.playList[this.playListIndex].id);\r\n    // this.updateTime();\r\n  },\r\n  updated() {\r\n    this.$store.dispatch(\"getLyric\", this.playList[this.playListIndex].id);\r\n  },\r\n  methods: {\r\n    play: function () {\r\n      // 判断音乐是否播放\r\n      if (this.$refs.audio.paused) {\r\n        this.$refs.audio.play();\r\n        this.updateIsbtnShow(false);\r\n        // this.updateTime(); // 播放就调用函数 进行传值\r\n        clearInterval(this.interVal)\r\n      } else {\r\n        this.$refs.audio.pause();\r\n        this.updateIsbtnShow(true);\r\n        // clearInterval(this.interVal); // 暂停清除定时器\r\n        this.updateTime()\r\n      }\r\n    },\r\n    updateTime: function () {\r\n      this.interVal = setInterval(() => {\r\n        this.updateCurrentTime(this.$refs.audio.currentTime);\r\n      }, 1000);\r\n    },\r\n    ...mapMutations([\r\n      \"updateIsbtnShow\",\r\n      \"updateDetailShow\",\r\n      \"updateCurrentTime\",\r\n    ]),\r\n  },\r\n  watch: {\r\n    playListIndex: function () {\r\n      // 监听如果下标发生改变，就自动播放音乐\r\n      this.$refs.audio.autoplay = true;\r\n      if (this.$refs.audio.paused) {\r\n        // 如果是暂停状态，就改变图标\r\n        this.updateIsbtnShow(false);\r\n      }\r\n    },\r\n    playList: function () {\r\n      if (this.isBtnShow) {\r\n        // 如果 isBtnShow 为 true（暂停图标），就自动播放\r\n        this.$refs.audio.autoplay = true;\r\n        this.updateIsbtnShow(false);\r\n      }\r\n    },\r\n  },\r\n  components: { MusicDetail },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.footerMusic {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 1.4rem;\r\n  background: white;\r\n  border-top: 0.03rem solid gray;\r\n  display: flex;\r\n  padding: 0.2rem;\r\n  justify-content: space-between;\r\n  .footerLeft {\r\n    display: flex;\r\n    justify-content: space;\r\n    align-items: center;\r\n    width: 65%;\r\n    height: 100%;\r\n    img {\r\n      width: 1rem;\r\n      height: 1rem;\r\n      border-radius: 1.8rem;\r\n      //   margin-right: 0.2rem;\r\n    }\r\n    div {\r\n      margin-left: 0.2rem;\r\n      p {\r\n        font-weight: 600;\r\n      }\r\n      span {\r\n        font-size: 0.26rem;\r\n      }\r\n    }\r\n  }\r\n  .footerRight {\r\n    width: 20%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    .icon {\r\n      width: 0.6rem;\r\n      height: 0.6rem;\r\n      //   fill: black;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}